#!/usr/bin/env sh

# Build script for shake-lang.github.io



SHAKE_REPOSITORY=https://github.com/shake-lang/shake

START_DIR=$PWD

cd $0/..

#Remember build base-dir
BUILD_BASEDIR=$PWD







# Clean Task
clean() {

  # Clean gradle
  echo Starting clean...
  if test -f "$BUILD_BASEDIR/build/shake"; then
    cd $BUILD_BASEDIR/build/shake
    chmod +x gradlew
    echo
    echo
    echo ---------------------------- Clean Interpreter -----------------------------
    echo
    echo \> build/shake/gradlew clean
    echo
    ./gradlew clean --quiet
    echo
    echo ------------------------ Clean Interpreter finished -------------------------
    echo
    cd $BUILD_BASEDIR
  fi

  if test -f "$BUILD_BASEDIR/build"; then

    chmod +x gradlew
    echo
    echo
    echo ---------------------------- Clean Interpreter -----------------------------
    echo
    echo \> gradlew clean
    echo
    ./gradlew clean --quiet
    echo
    echo ------------------------ Clean Interpreter finished -------------------------
    echo
    echo

  fi

  # Remove build folder
  if test -f "$BUILD_BASEDIR/build"; then
    echo Removing build folder...
    rm -r $BUILD_BASEDIR/build
  fi

  echo clean finished!
}






build() {
  # Build Task

  echo
  echo Starting build...


  # Create build folder
  if test ! -f "build"; then
    mkdir build
  fi
  cd build

  # Remember build-dir
  BUILD_BUILDDIR=$PWD




  # Clone Shake
  if test -f "shake"; then
    rm -r $BUILD_BASEDIR/build
  fi

  echo
  echo Cloning shake repository \($SHAKE_REPOSITORY\) into build/shake...
  echo
  git clone $SHAKE_REPOSITORY ./shake
  echo
  echo




  # Publish Shake
  cd $BUILD_BUILDDIR/shake
  chmod +x gradlew
  echo
  echo
  echo ------------------------------- Build Shake -------------------------------
  echo
  echo \> build/shake/gradlew publishToMavenLocal
  echo
  ./gradlew publishToMavenLocal --quiet
  echo --------------------------- Build Shake finished --------------------------




  # Build interpreter
  cd $BUILD_BASEDIR
  chmod +x gradlew
  echo
  echo
  echo ---------------------------- Build Interpreter ----------------------------
  echo
  echo \> gradlew build
  echo
  ./gradlew build --quiet
  echo
  echo ------------------------ Build Interpreter finished ------------------------



  # Build web application
  cd $BUILD_BASEDIR

  echo
  echo
  echo ------------------------------- Install npm -------------------------------
  echo
  echo \> npm ci
  echo
  npm ci
  echo
  echo --------------------------- Install npm finished ---------------------------

  echo
  echo
  echo ------------------------------ Build Website ------------------------------
  echo
  echo \> grunt build
  echo
  npx grunt build
  echo
  echo -------------------------- Build Website finished --------------------------

  echo
  echo
  echo build finished successfully

}


help() {
  # Print out help
  echo Subcommands:
  echo $0 build  -  Build the application
  echo $0 clean  -  Clean the build
  echo $0 help   -  Show this help-menu
}







if "$1" == "build"; then build;
elif "$1" == "clean"; then clean;
elif "$1" == "help"; then help;
elif "$1" == ""; then
  echo
  echo Please specify subcommand
  echo Enter build help to get help!
else
  echo
  echo Invalid command "$0 $*"
  echo Enter build help to get help!
fi

cd $START_DIR