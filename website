#!/usr/bin/env sh

# Build script for shake-lang.github.io



SHAKE_REPOSITORY=https://github.com/shake-lang/shake

START_DIR={PWD##*/}

cd $0\..

#Remember build base-dir
set BUILD_BASEDIR=%CD%







# Clean Task
function clean() {

  # Clean gradle
  echo Starting clean...
  if exist "%BUILD_BASEDIR%\build\shake"; then
    cd %BUILD_BASEDIR%\build\shake
    chmod +x gradlew
    echo.
    echo.
    echo ---------------------------- Clean Interpreter -----------------------------
    echo.
    echo ^> build/shake/gradlew clean
    echo.
    call gradlew clean --quiet
    echo.
    echo ------------------------ Clean Interpreter finished -------------------------
    echo.
    cd %BUILD_BASEDIR%
  fi

  if exist "%BUILD_BASEDIR%\build"; then

    chmod +x gradlew
    echo.
    echo.
    echo ---------------------------- Clean Interpreter -----------------------------
    echo.
    echo ^> gradlew clean
    echo.
    call gradlew clean --quiet
    echo.
    echo ------------------------ Clean Interpreter finished -------------------------
    echo.
    echo.

  fi

  # Remove build folder
  if exist "%BUILD_BASEDIR%\build" then
    echo Removing build folder...
    rmdir %BUILD_BASEDIR%\build /s /q
  fi

  echo clean finished!
}






function build() {
  @rem Build Task

  echo.
  echo Starting build...



  :init-build-dir

  @rem Create build folder
  if not exist "build" mkdir build
  cd build

  @rem Remember build-dir
  set BUILD_BUILDDIR=%CD%




  :clone-shake

  @rem Clone Shake
  if not exist "shake" (
    echo.
    echo Cloning shake repository ^(%SHAKE_REPOSITORY%^) into build/shake...
    echo.
    git clone %SHAKE_REPOSITORY% ./shake
    echo.
    echo.
  )




  :build-shake

  @rem Publish Shake
  cd %BUILD_BUILDDIR%\Shake
  chmod +x gradlew
  echo.
  echo.
  echo ------------------------------- Build Shake -------------------------------
  echo.
  echo ^> build/shake/gradlew publishToMavenLocal
  echo.
  call gradlew publishToMavenLocal --quiet
  echo --------------------------- Build Shake finished --------------------------




  :build-interpreter
  @rem Build interpreter
  cd %BUILD_BASEDIR%
  chmod +x gradlew
  echo.
  echo.
  echo ---------------------------- Build Interpreter ----------------------------
  echo.
  echo ^> gradlew build
  echo.
  call gradlew build --quiet
  echo.
  echo ------------------------ Build Interpreter finished ------------------------



  :build-interpreter
  @rem Build web application
  cd %BUILD_BASEDIR%

  echo.
  echo.
  echo ------------------------------- Install npm -------------------------------
  echo.
  echo ^> npm ci
  echo.
  call npm ci
  echo.
  echo --------------------------- Install npm finished ---------------------------

  echo.
  echo.
  echo ------------------------------ Build Website ------------------------------
  echo.
  echo ^> grunt build
  echo.
  call npx grunt build
  echo.
  echo -------------------------- Build Website finished --------------------------

  echo.
  echo.
  echo build finished successfully

}


function help() {
  # Print out help
  echo Subcommands:
  echo $0 build  -  Build the application
  echo $0 clean  -  Clean the build
  echo $0 help   -  Show this help-menu
}







if "$1" == "build"; then build();
elif "$1" == "clean"; then clean();
elif "$1" == "help"; then help();
elif "$1" == "" then
  echo.
  echo Please specify subcommand
  echo Enter build help to get help!
else
  echo.
  echo Invalid command "$0 $*"
  echo Enter build help to get help!
fi

cd %START_DIR%